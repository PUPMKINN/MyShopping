<!DOCTYPE html>
<html lang="en">
<style>
    @import url(/stylesheets/category.css);
</style>
<script type="module" src="/javascripts/swiper-bundle.min.js"></script>
<script type="module" src="/javascripts/script.js"></script>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Account List</title>
    <link rel="stylesheet" href="/assetsViewWaitingTutor/styleViewListCourse.css">
    <link rel="stylesheet" href="/pagination.css">
    <script src="/javascripts/script.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <!-- Google chart -->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
</head>

<body>
    <div class="page-view-account-list">

        <div class="category-content">
            <div class="sorter">
                <a href="#0" class="menu-trigger" trigger-button data-target="sidebar-filter">
                    <i class="ri-filter-line"></i>
                </a>
                <div class="left">
                    <div class="input-box">
                        <i class="fas fa-search"></i>

                        <input type="text" id="search-tutor" placeholder="Search">
                    </div>
                </div>
                <div class="right">
                    <div class="col-8 col-xl-2 col-lg-2 col-sm-8 wrapper-sort-course">
                        <select class="form-select" id="sort_selection" aria-label="Sort Course">
                            <option selected>Sort accounts</option>
                            <option value="name-asc">Name course, Alphabetically, A-Z</option>
                            <option value="name-desc">Name course, Alphabetically, Z-A</option>
                            <option value="tutor-asc">Tutor, Alphabetically, A-Z</option>
                            <option value="tutor-desc">Tutor, Alphabetically, Z-A</option>
                            <option value="price-desc">Price, expensive to cheap</option>
                            <option value="price-asc">Price, cheap to expensive</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="tabbed">
                <div id="shoes" class="sort-data active">
                    <div class="dotgrid">
                        <div class="wrapper">
                            {{#each courseList}}
                            <div class="item">
                                <div class="dot-image">
                                    <a onclick="loadDetail('{{this._id}}')" class="product-permalink"></a>
                                    <div class="thumbnail">
                                        <img src="/images/{{this.tutor.avatar}}" alt="">
                                    </div>
                                    <div class="label"><span>-{{percent this.discount
                                            this.price}}%</span></div>
                                </div>
                                <div class="dot-info">

                                    <h2 class="dot-title"><a href="">Môn học: {{this.name}}</a>
                                        <h2 class="dot-title"><a href="">Tên giảng viên:
                                                {{this.tutor.fullname}}</a>

                                        </h2>
                                        <i class="ri-star-fill"></i>
                                        <i class="ri-star-fill"></i>
                                        <i class="ri-star-fill"></i>
                                        <i class="ri-star-fill"></i>
                                        <i class="ri-star-fill"></i>

                                        <div class="product-price">
                                            <p class="before"> {{this.price}}VNĐ</p>
                                            <p class="current">{{this.discount}}VNĐ</p>
                                        </div>
                                </div>
                            </div>
                            {{/each}}

                        </div>

                    </div>
                </div>
            </div>
            <div class="pagination">
                <a id="prev_page" href="/courses?page={{prevPage}}">
                    < </a>
                        {{#each pages}}
                        <a id="{{this}}" href="/admin/viewListCourse/?page={{this}}"
                            class="{{#if (eq this ../currentPage)}}active{{/if}}">{{this}}</a>
                        {{/each}}
                        <a id="next_page" href="/admin/viewListCourse/?page={{nextPage}}"> > </a>
            </div>
        </div>

    </div>

    <script>
        function loadDetailUser(id) {
            window.location.href = `/admin/viewListCourse/${id}`
        }

        //handle choose method search

        // Lấy phần tử input range
        const $ = document.querySelector.bind(document)
        const $$ = document.querySelectorAll.bind(document)
        const rangeInput = $('#range-price');
        const submitBtn = $('#primary-btn');
        let faculty = "None";
        let studentCourse = "None";
        // handle sort and filter

        let maxPrice = 20000000;
        let minPrice = 0;
        // Thêm sự kiện 'input' để theo dõi sự thay đổi giá trị
        rangeInput.addEventListener('input', function () {
            // Lấy giá trị hiện tại từ phần tử input range
            maxPrice = rangeInput.value;
            // Hiển thị giá trị trong console hoặc làm cái gì đó với giá trị này
            console.log('Giá trị hiện tại:', maxPrice);
        });
        let currentUrl = new URL(window.location.href);
        //handle uncheck radio
        let selectedRadio = null;



        // Select both "studentCourse" and "faculty" radio buttons
        document.querySelectorAll('input[type=radio][name="faculty"]').forEach(radio => {
            radio.addEventListener('click', function () {

                let deselect = (this == faculty);
                if (deselect) {
                    faculty = `None`;
                } else {
                    faculty = this.value;
                }
                this.checked = !deselect;
            });
        });

        document.querySelectorAll('input[type=radio][name="studentCourse"]').forEach(radio => {
            radio.addEventListener('click', function () {

                let deselect = (this == studentCourse);
                if (deselect) {
                    studentCourse = `None`;
                } else {
                    studentCourse = this.value;
                }
                this.checked = !deselect;
            });
        });
        const sortSelection = document.getElementById("sort_selection");
        console.log(sortSelection)
        sortSelection.addEventListener("change", async function () {

            let selectedValue = sortSelection.value;
            const parts = selectedValue.split('-');
            const sortByOrder = parts[1];
            const sortByField = parts[0];
            if (currentUrl.searchParams.has('sortByField')) {
                currentUrl.searchParams.set('sortByField', sortByField);
            }
            else {
                currentUrl.searchParams.append('sortByField', sortByField);
            }

            if (currentUrl.searchParams.has('sortByOrder')) {
                currentUrl.searchParams.set('sortByOrder', sortByOrder);
            }
            else {
                currentUrl.searchParams.append('sortByOrder', sortByOrder);
            }
            console.log('haha')
            window.location.href = currentUrl.toString();


        })

        function clearForm() {
            currentUrl.searchParams.delete('faculty');
            currentUrl.searchParams.delete('studentCourse');
            currentUrl.searchParams.delete('minPrice');
            currentUrl.searchParams.delete('maxPrice');
            // window.location.href = currentUrl.toString();
        }
        submitBtn.addEventListener('click', function () {

            console.log(faculty)
            console.log(studentCourse)


            if (currentUrl.searchParams.has('faculty')) {
                currentUrl.searchParams.set('faculty', faculty);
            }
            else {
                currentUrl.searchParams.append('faculty', faculty);
            }

            if (currentUrl.searchParams.has('studentCourse')) {
                currentUrl.searchParams.set('studentCourse', studentCourse);
            }
            else {
                currentUrl.searchParams.append('studentCourse', studentCourse);
            }


            if (currentUrl.searchParams.has('minPrice')) {
                currentUrl.searchParams.set('minPrice', minPrice);
            }
            else {
                currentUrl.searchParams.append('minPrice', minPrice);
            }

            if (currentUrl.searchParams.has('maxPrice')) {
                currentUrl.searchParams.set('maxPrice', maxPrice);
            }
            else {
                currentUrl.searchParams.append('maxPrice', maxPrice);
            }
            console.log(currentUrl.toString());
            window.location.href = currentUrl.toString();

        });



        $('.fa-search').addEventListener('click', function () {
            const tutorName = $('#search-tutor').value
            console.log(tutorName)
            if (currentUrl.searchParams.has('searchField')) {
                currentUrl.searchParams.set('searchField', tutorName);
            }
            else {
                currentUrl.searchParams.append('searchField', tutorName);
            }
            window.location.href = currentUrl.toString();

        });
        // handle
        function loadDetail(id) {
            window.location.href = `/{{role}}/courses/${id}`
        }
        // changePage

        function changePage(page) {
            if (currentUrl.searchParams.has('page')) {
                currentUrl.searchParams.set('page', page);
            }
            else {
                currentUrl.searchParams.append('page', page);
            }
            window.location.href = currentUrl.toString();
        }
        // handler limit price
        const valueLimit = $('#value-limit');
        rangeInput.addEventListener('input', function () {
            // Lấy giá trị hiện tại từ phần tử input range
            maxPrice = rangeInput.value;

            console.log('Giá trị hiện tại:', maxPrice);
            valueLimit.innerHTML = maxPrice + ' VNĐ';
        });

    </script>
</body>

</html>